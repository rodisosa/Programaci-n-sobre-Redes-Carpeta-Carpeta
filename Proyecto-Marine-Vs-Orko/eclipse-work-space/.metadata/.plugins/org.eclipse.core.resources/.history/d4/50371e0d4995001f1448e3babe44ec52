package com.dojan.marinevsorko.utiles;


import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.InputMultiplexer;
import com.badlogic.gdx.graphics.Camera;
import com.badlogic.gdx.graphics.OrthographicCamera;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.scenes.scene2d.Stage;
import com.badlogic.gdx.utils.viewport.FitViewport;
import com.badlogic.gdx.utils.viewport.StretchViewport;
import com.badlogic.gdx.utils.viewport.Viewport;
import com.dojan.marinevsorko.MarineVsOrko;

public class Config {
	
	public static final int WIDTH = 896;		// Ancho de la pantalla  
	public static final int HEIGHT = 480;		// Alto de la pantalla
	
	public static final float GRAVEDAD = 9.8f;
	
	public static final int TAMANIO_TILE = 32;
	
	public static Camera camara;
	public static Camera oCamUI;
	public static Camera oCamBox2D;
	
	public static Stage stage;
	public static SpriteBatch b;
	
	public MarineVsOrko game;
	
	private static Viewport v;
	
	

	public static  void iniciarCamara(MarineVsOrko game){
	        
			camara = new OrthographicCamera(WIDTH,HEIGHT);
	        camara.normalizeUp();
	        v = new FitViewport(WIDTH, HEIGHT, camara); 
	        v.update(WIDTH, HEIGHT,true);
	        Render.batch.setProjectionMatrix(camara.combined);
	        
	        
	        this.game = game;
	        
	        
	        
	        stage = new Stage(new StretchViewport(WIDTH, HEIGHT));
	        
	        oCamUI = new OrthographicCamera(WIDTH, HEIGHT);
	        oCamUI.position.set(WIDTH / 2f, HEIGHT / 2f, 0);
	        
	        oCamBox2D = new OrthographicCamera(WIDTH, HEIGHT);
	        oCamBox2D.position.set(WIDTH / 2f, HEIGHT / 2f, 0);
	        
	        InputMultiplexer input = new InputMultiplexer(this, stage);
	        Gdx.input.setInputProcessor(input);

	        b = new SpriteBatch();
	        
	}
	 
	
	public static Viewport getViewport() {
		return v; 
	}
	 
	
	
	public static void updateCamara(){
		camara.update();
	}
	 
	
	
	
	
	
	
	
	 
	
	
	 
	
	
	
	
	
	
	
	
	 
	 
}
